# -*- generated by 1.0.9 -*-
import da
PatternExpr_182 = da.pat.TuplePattern([da.pat.ConstantPattern('SET_UP')])
PatternExpr_187 = da.pat.BoundPattern('_BoundPattern191_')
PatternExpr_192 = da.pat.TuplePattern([da.pat.FreePattern(None), da.pat.TuplePattern([da.pat.FreePattern(None), da.pat.FreePattern(None), da.pat.BoundPattern('_BoundPattern198_')]), da.pat.TuplePattern([da.pat.ConstantPattern('SET_UP')])])
_config_object = {}

class Olympus(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._OlympusReceivedEvent_0 = []
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_OlympusReceivedEvent_0', PatternExpr_182, sources=[PatternExpr_187], destinations=None, timestamps=None, record_history=True, handlers=[])])

    def setup(self, clients, replicas, **rest_211):
        super().setup(clients=clients, replicas=replicas, **rest_211)
        self._state.clients = clients
        self._state.replicas = replicas
        self.output('************Setting Up Olympus***********')
        self._state.clients = self._state.clients
        self._state.replicas = self._state.replicas

    def run(self):
        self.output('*********RUN : Olympus***********')
        PatternExpr_192.match_iter(self._OlympusReceivedEvent_0, _BoundPattern198_=self._state.clients, SELF_ID=self._id)
        self.output('*********Received SET_UP from Client***********')
        self.send(('SET_UP',), to=self._state.clients)
