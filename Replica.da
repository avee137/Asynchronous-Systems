class Replica(process):
	def setup(client,olympus,currentReplica,prevReplica,nextReplica):
		print("****************setting up replica start*******************")
		self.client=client
		self.olympus = olympus
		self.currentReplica=currentReplica
		self.prevReplica=prevReplica
		self.nextReplica=nextReplica
		print("****************setting up replica finished****************")
		

	def main(): pass

	def receive(msg=('PERFORM_OPERATION',flag,),from_=self.client):
		output("currentReplica: ",self.currentReplica,", prevReplica: ",prevReplica,", nextReplica: ",nextReplica,", client: ",self.client,", flag : ",flag)
		if flag=="FORWARD":
			output("PERFORM Forward shuttle operation")
			if self.nextReplica != None:
				start(self.nextReplica)
				send(('PERFORM_OPERATION',flag,), to=self.nextReplica)
			
			if self.nextReplica == None:
				flag = "REVERSE"
				output("reached the tail node bro!",flag,'reversing the shuttle')
				# send(('PERFORM_OPERATION',flag,), to=self.client)
				send(('PERFORM_OPERATION',flag,), to=self.prevReplica)

		if flag == "REVERSE":
			if self.prevReplica != None:
				send(('REVERSE_SHUTTLE',flag,), to=self.prevReplica)

			if self.prevReplica == None:
				output("reached the head node!",flag)

	def run():
		output("********RUN : Received Message from Client. Replica Name : ",self.currentReplica," ********")
		await(received('',))

		# flag=None
		# 